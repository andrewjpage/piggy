#!/bin/bash

usage()
{
cat << EOF

igry

 -i input directory (default - current directory)
 -o output directory (default - current directory/igry_out)
 -t threads (default 1)
 -r roary output directory
 -h help

EOF
}

if [[ ! $@ =~ ^\-.+ ]]
then
	usage
	exit
fi

in_dir=$(pwd)
out_dir="$in_dir/igry_out"
threads=1

while getopts "i: o: t: r: h" opt; do
 	case "$opt" in
		i) in_dir=$OPTARG;;
		o) out_dir=$OPTARG;;
		t) threads=$OPTARG;;
		r) roary_dir=$OPTARG;;
		h) usage;exit;;
	esac
done

if [ ! -d "$in_dir" ]
then
	printf "Input folder doesn't exist.\n"
fi

if [ ! -d "$out_dir" ]
then
	mkdir "$out_dir"
	
	if [ -d "$out_dir" ]
	then
		printf "Created output folder $out_dir\n"
	fi
fi

printf "" > "$out_dir/log.txt"

file_array=("$in_dir/*.gff")

count=0
for file in $file_array
do
	isolate=("${file##*/}")
	isolate=("${isolate%%.*}")
	
	isolate_array[count]=$isolate
	
	count=$((count + 1))
done

isolate_count=${#isolate_array[@]}

printf "$isolate_count isolates found.\n"

printf "" >  "$out_dir/isolates.txt"

for i in ${isolate_array[@]}
do
	printf "%s\n" $i >> "$out_dir/isolates.txt"
done

if [ ! -d "$out_dir/coordinate_files" ]
then
	mkdir "$out_dir/coordinate_files"
fi

if [ -f "$out_dir/output_fasta.fasta" ]
then
	rm "$out_dir/output_fasta.fasta"
fi

if [ ! -d "$out_dir/isolate_intergenic_files" ]
then
	mkdir "$out_dir/isolate_intergenic_files"
fi

for isolate in ${isolate_array[@]}
do
	gff_modifier.pl "$in_dir/$isolate.gff" >> "$out_dir/log.txt"
	
	gene_intergenic_coordinate_extracter.pl "$isolate" "$in_dir/$isolate.gff.modified" "$out_dir/coordinate_files" >> "$out_dir/log.txt"
	
	if [ ! -d "$out_dir/isolate_intergenic_files/$isolate" ]; then
		mkdir "$out_dir/isolate_intergenic_files/$isolate"
	fi
	
	intergenic_sequence_extracter.pl "$isolate" "$in_dir/$isolate.gff.modified" "$out_dir/coordinate_files/${isolate}_intergenic_coordinates.tab" "$out_dir" "$out_dir/isolate_intergenic_files/$isolate" >> "$out_dir/log.txt"
done

printf "Clustering IGRs...\n" >> "$out_dir/log.txt";printf "Clustering IGRs...\n"

cdhit-est -i $out_dir/output_fasta.fasta -o "$out_dir/output_fasta_clustered.fasta" -c 0.9 -T "$threads" -n 10 -d 0 -s 0.9 -g 0 -r 1 -mask N &> /dev/null

rm "$out_dir/output_fasta_clustered.fasta"

printf "IGRs clustered.\n" >> "$out_dir/log.txt";printf "IGRs clustered.\n"

if [ ! -d "$out_dir/cluster_intergenic_files" ]
then
	mkdir "$out_dir/cluster_intergenic_files"
fi

if [ ! -d "$out_dir/cluster_intergenic_alignment_files" ]
then
	mkdir "$out_dir/cluster_intergenic_alignment_files"
fi

if [ ! -d "$out_dir/cluster_representative_files" ]
then
	mkdir "$out_dir/cluster_representative_files"
fi

cluster_file_creator.pl "$out_dir" >> "$out_dir/log.txt"

readarray -t cluster_array < "$out_dir/clusters.txt"

cluster_count=${#cluster_array[@]}

printf "%i IGR clusters found.\n" "$cluster_count" >> "$out_dir/log.txt";printf "%i IGR clusters found.\n" "$cluster_count"

printf "Merging IGR clusters.\n" >> "$out_dir/log.txt";printf "Merging IGR clusters.\n"

makeblastdb -in "$out_dir/representative_clusters.fasta" -out "$out_dir/representative_clusters_db" -dbtype nucl

#for cluster in ${cluster_array[@]}
#do
	blastn -db "$out_dir/representative_clusters_db" -query "$out_dir/representative_clusters.fasta" -dust no -out "$out_dir/representative_clusters_blast_out.tab" -outfmt "6 qseqid sseqid qlen slen pident length mismatch gapopen qstart qend sstart send evalue bitscore"
#done

#printf "Aligning IGR clusters...\n" >> "$out_dir/log.txt";printf "Aligning IGR clusters...\n"

#for ((i = 0 ; i < $cluster_count ; i++))
#do	
#	cluster=${cluster_array[$i]}
#	
#	seq_count=$(awk '/^>/{a++}END{print a}' "$out_dir/cluster_intergenic_files/${cluster}.fasta")
#	
#	if [ "$seq_count" -gt 1 ]
#	then
#		mafft --retree 2 --maxiterate 0 --adjustdirection --quiet "$out_dir/cluster_intergenic_files/${cluster}.fasta" 1> "$out_dir/cluster_intergenic_files/${cluster}_aligned_tmp.fasta" 2> /dev/null
#		#mafft --localpair --maxiterate 1000 --adjustdirection --quiet "$out_dir/cluster_intergenic_files/${cluster}.fasta" 1> "$out_dir/cluster_intergenic_files/${cluster}_aligned_tmp.fasta" 2> /dev/null
#		
#		fasta_converter.pl "$out_dir/cluster_intergenic_files/${cluster}_aligned_tmp.fasta" "$out_dir/cluster_intergenic_files/${cluster}_aligned.fasta"
#		
#		cp "$out_dir/cluster_intergenic_files/${cluster}_aligned.fasta" "$out_dir/cluster_intergenic_alignment_files/${cluster}_aligned.fasta"
#	else
#		cp "$out_dir/cluster_intergenic_files/${cluster}.fasta" "$out_dir/cluster_intergenic_alignment_files/${cluster}_aligned.fasta"
#	fi
#	
#	rem=$(($i % 100))
#	if [ "$rem" -eq 0 ] && [ "$i" -gt 0 ]
#	then
#		printf "%i / %i IGR clusters aligned.\n" "$i" "$cluster_count"
#	fi
#done

#printf "IGR clusters aligned.\n" >> "$out_dir/log.txt";printf "IGR clusters aligned.\n"

#printf "Producing IGR presence absence matrix...\n" >> "$out_dir/log.txt";printf "Producing IGR presence absence matrix...\n"

#cluster_presence_absence.pl "$out_dir" >> "$out_dir/log.txt"

##printf "Calculating gene divergences...\n" >> "$out_dir/log.txt";printf "Calculating gene divergences...\n"

##divergence_checker.pl "$roary_dir/pan_genome_sequences" "$out_dir" "roary_gene_divergences.csv"

##printf "Gene divergences calculated.\n" >> "$out_dir/log.txt";printf "Gene divergences calculated.\n"

##printf "Calculating IGR divergences...\n" >> "$out_dir/log.txt";printf "Calculating IGR divergences...\n"

##divergence_checker.pl "$out_dir/cluster_intergenic_alignment_files" "$out_dir" "igry_IGR_divergences.csv"

##printf "IGR divergences calculated.\n" >> "$out_dir/log.txt";printf "IGR divergences calculated.\n"

#printf "Combining gene and IGR matrices...\n" >> "$out_dir/log.txt";printf "Combining gene and IGR matrices...\n"

#roary_igry_combiner.pl "$out_dir" "$roary_dir" >> "$out_dir/log.txt"

#if [ ! -d "$out_dir/switched_region_files" ]
#then
#	mkdir "$out_dir/switched_region_files"
#fi

#printf "Detecting candidate switched IGRs...\n" >> "$out_dir/log.txt";printf "Detecting candidate switched IGRs...\n"

#switched_region_creator.pl "$out_dir/roary_igry_combined.tab" "$out_dir/cluster_intergenic_files" "$out_dir"

#printf "Candidate switched IGRs detected.\n" >> "$out_dir/log.txt";printf "Candidate switched IGRs detected.\n"

#if [ ! -d "$out_dir/switched_region_alignment_files" ]
#then
#	mkdir "$out_dir/switched_region_alignment_files"
#fi

#readarray -t switched_region_array < "$out_dir/switched_regions.txt"

#printf "Aligning candidate switched IGRs...\n" >> "$out_dir/log.txt";printf "Aligning candidate switched IGRs...\n"

#for switched_region in ${switched_region_array[@]}
#do
#	blastn -query "$out_dir/switched_region_files/${switched_region}.fasta" -subject "$out_dir/switched_region_files/${switched_region}.fasta" -dust no -outfmt 6 -out "$out_dir/blast_out.tab"
#	
#	blast_hit=$(blast_parser.pl "$out_dir/blast_out.tab" "$out_dir/switched_region_files/${switched_region}.fasta" "$out_dir/switched_region_files/${switched_region}_aligned.fasta")
#	
#	rm "$out_dir/blast_out.tab"
#	
#	if [ "$blast_hit" = "hit" ]
#	then
#		#mafft --retree 2 --maxiterate 0 --adjustdirection --quiet "$out_dir/switched_region_files/${switched_region}.fasta" 1> "$out_dir/switched_region_files/${switched_region}_aligned_tmp.fasta" 2> /dev/null
#		mafft --localpair --maxiterate 1000 --adjustdirection --quiet "$out_dir/switched_region_files/${switched_region}.fasta" 1> "$out_dir/switched_region_files/${switched_region}_aligned_tmp.fasta" 2> /dev/null
#	
#		fasta_converter.pl "$out_dir/switched_region_files/${switched_region}_aligned_tmp.fasta" "$out_dir/switched_region_files/${switched_region}_aligned.fasta"
#	fi
#	
#	cp "$out_dir/switched_region_files/${switched_region}_aligned.fasta" "$out_dir/switched_region_alignment_files/${switched_region}_aligned.fasta"
#done

#printf "Candidate switched IGRs aligned.\n" >> "$out_dir/log.txt";printf "Candidate switched IGRs aligned.\n"

#printf "Calculating candidate switched IGR divergences...\n" >> "$out_dir/log.txt";printf "Calculating candidate switched IGR divergences...\n"

#divergence_checker.pl "$out_dir/switched_region_alignment_files" "$out_dir" "switched_region_divergences.csv"

#printf "Candidate switched IGR divergences calculated.\n" >> "$out_dir/log.txt";printf "Candidate switched IGR divergences calculated.\n"

#printf "Making R plots.\n"

#R_plotter.R "$out_dir"

# Cleanup

#rm -r "$out_dir/cluster_intergenic_files"

